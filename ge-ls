#!/bin/bash

txt_bold=`tput bold`
txt_normal=`tput sgr0`

function print_usage() {
	echo "#    ge-ls"
	echo "#    List files added, copied, renamed, deleted and modified between two branches and/or tags."
	echo "#"
	echo "#    Usage:"
	echo "#"
	echo "#    ge ls"
	echo "#        Lists all files touched between current branch and master"
	echo "#"
	echo "#    ge ls mybranch"
	echo "#        Lists all files touched between mybranch and current branch"
	echo "#"
	echo "#    ge ls ref1 ref2"
	echo "#        Lists all files touched between the two branches, commits or tags"
	echo "#"
	echo "#    Options:"
	echo "#"
	echo "#    -a List only added files"
	echo "#    -c List only copied files"
	echo "#    -d List only deleted files"
	echo "#    -m List only modified files"
	echo "#    -r List only renamed files"
	echo "#    --help Show this help message"
	echo "#    --show-commands Show the git commands used"
	echo "#"
	echo "#    Examples:"
	echo "#"
	echo "#    ge ls -a branch1 branch2"
	echo "#        List only added files between branch1 and branch2"
	echo "#"
	echo "#    ge ls -a -d branch1 branch2"
	echo "#        List only added and deleted files between branch1 and branch2"
	echo "#"
	echo "#    ge ls -m -d"
	echo "#        List only modified and deleted files between master and current branch"
}

flags=""
ref_1=""
ref_2=""
show_commands="false"

# gather input from command line
while [ "$1" != "" ]
do
    case "$1" in
		--help)
			print_usage
			exit $?
			;;
		--show-commands)
			shift
			show_commands="true"
			;;
		-m)
			shift
			flags="${flags}M"
			;;
		-a)
			shift
			flags="${flags}A"
		    ;;
		-d)
			shift
			flags="${flags}D"
		    ;;
		-c)
			shift
			flags="${flags}C"
			;;
		-r)
			shift
			flags="${flags}R"
			;;
		*)
			break
	esac
done

if [ -z "$1" ]; then
	ref_1="master"
	ref_2=`ge current_branch`
elif [ -z "$2" ]; then
	ref_1="$1"
	ref_2=`ge current_branch`
else
	ref_1="$1"
	ref_2="$2"
fi

if [ -z "$flags" ]; then
	if [ $show_commands = "true" ]; then
		echo "${txt_bold}git diff --name-status -C $ref_1 $ref_2 | grep -E \"^[ACDMR]\" | sed \"s/^[ACDMR]\s*\(.*\)/\1/\"${txt_normal}"
	fi

	git diff --name-status -C $ref_1 $ref_2 | grep -E '^[ACDMR]' | sed 's/^[ACDMR]\s*\(.*\)/\1/'
else
	if [ $show_commands = "true" ]; then
		echo "${txt_bold}git diff --name-status -C $ref_1 $ref_2 | grep -E \"^[$flags]\" | sed \"s/^[$flags]\s*\(.*\)/\1/\"${txt_normal}"
	fi

	git diff --name-status -C $ref_1 $ref_2 | grep -E "^[$flags]" | sed "s/^[$flags]\s*\(.*\)/\1/"
fi

exit $?
